name: CI/CD Docker Deploy Flask to EC2

on:
  push:
    branches:
      - master  # deploy on push to master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2️⃣ Set up SSH
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    # 3️⃣ Copy files to EC2
    - name: Copy project to EC2
      run: |
        scp -o StrictHostKeyChecking=no -r $GITHUB_WORKSPACE/* ubuntu@${{ secrets.EC2_PUBLIC_IP }}:~/flask-app/

    # 4️⃣ Build & Run Docker on EC2
    - name: Deploy on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          cd ~/flask-app

          # Stop & remove old container if exists
          docker ps -q --filter "name=flask-app" | grep -q . && docker stop flask-app || true
          docker ps -aq --filter "name=flask-app" | grep -q . && docker rm flask-app || true

          # Build new image
          docker build -t flask-app .

          # Run container
          docker run -d -p 80:5000 \
            --name flask-app \
            --restart always \
            -e GEMINI_API_KEY=${GEMINI_API_KEY} \
            flask-app
        EOF
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
